{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Desktop/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx\";\nimport React, { Component } from \"react\";\nimport s from \"./ImageGallery.module.css\";\nimport ImageGalleryItem from \"components/ImageGalleryItem/ImageGalleryItem\";\nimport Modal from \"components/Modal/Modal\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ImageGallery extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showModal: false,\n      bigPic: null\n    };\n\n    this.toggleModal = () => {\n      this.setState(_ref => {\n        let {\n          showModal\n        } = _ref;\n        return {\n          showModal: !showModal\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"click\", e => {\n      if (e.target.nodeName !== \"IMG\") {\n        this.setState({\n          showModal: false\n        });\n        return;\n      } else {\n        let picture = this.props.images.filter(obj => {\n          return obj.id === parseInt(e.target.alt);\n        });\n        this.setState({\n          bigPic: picture[0].largeImageURL\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      showModal,\n      bigPic\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: s.gallery,\n        onClick: this.toggleModal,\n        children: this.props.images.map(img => {\n          return /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n            smallImgURL: img.webformatURL,\n            id: img.id\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), showModal && bigPic && /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: this.toggleModal,\n        pic: bigPic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    webformatURL: PropTypes.string.isRequired\n  }))\n};","map":{"version":3,"sources":["/Users/roman/Desktop/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx"],"names":["React","Component","s","ImageGalleryItem","Modal","nanoid","PropTypes","ImageGallery","state","showModal","bigPic","toggleModal","setState","componentDidMount","document","addEventListener","e","target","nodeName","picture","props","images","filter","obj","id","parseInt","alt","largeImageURL","render","gallery","map","img","webformatURL","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,2BAAd;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,eAAe,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDO,KADkD,GAC1C;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD0C;;AAAA,SAoBlDC,WApBkD,GAoBpC,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAA,YAAC;AAAEH,UAAAA;AAAF,SAAD;AAAA,eAAoB;AAAEA,UAAAA,SAAS,EAAE,CAACA;AAAd,SAApB;AAAA,OAAd;AACD,KAtBiD;AAAA;;AAMlDI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAoCC,CAAD,IAAO;AACxC,UAAIA,CAAC,CAACC,MAAF,CAASC,QAAT,KAAsB,KAA1B,EAAiC;AAC/B,aAAKN,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA;AACD,OAHD,MAGO;AACL,YAAIU,OAAO,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAA0BC,GAAD,IAAS;AAC9C,iBAAOA,GAAG,CAACC,EAAJ,KAAWC,QAAQ,CAACT,CAAC,CAACC,MAAF,CAASS,GAAV,CAA1B;AACD,SAFa,CAAd;AAGA,aAAKd,QAAL,CAAc;AAAEF,UAAAA,MAAM,EAAES,OAAO,CAAC,CAAD,CAAP,CAAWQ;AAArB,SAAd;AACD;AACF,KAVD;AAWD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AACA,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEN,CAAC,CAAC2B,OAAjB;AAA0B,QAAA,OAAO,EAAE,KAAKlB,WAAxC;AAAA,kBACG,KAAKS,KAAL,CAAWC,MAAX,CAAkBS,GAAlB,CAAuBC,GAAD,IAAS;AAC9B,8BACE,QAAC,gBAAD;AAEE,YAAA,WAAW,EAAEA,GAAG,CAACC,YAFnB;AAGE,YAAA,EAAE,EAAED,GAAG,CAACP;AAHV,aACOnB,MAAM,EADb;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,EAYGI,SAAS,IAAIC,MAAb,iBACC,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKC,WAArB;AAAkC,QAAA,GAAG,EAAED;AAAvC;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA,oBADF;AAkBD;;AA5CiD;AA+CpDH,YAAY,CAAC0B,SAAb,GAAyB;AACvBZ,EAAAA,MAAM,EAAEf,SAAS,CAAC4B,OAAV,CACN5B,SAAS,CAAC6B,KAAV,CAAgB;AACdX,IAAAA,EAAE,EAAElB,SAAS,CAAC8B,MAAV,CAAiBC,UADP;AAEdV,IAAAA,aAAa,EAAErB,SAAS,CAACgC,MAAV,CAAiBD,UAFlB;AAGdL,IAAAA,YAAY,EAAE1B,SAAS,CAACgC,MAAV,CAAiBD;AAHjB,GAAhB,CADM;AADe,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport s from \"./ImageGallery.module.css\";\nimport ImageGalleryItem from \"components/ImageGalleryItem/ImageGalleryItem\";\nimport Modal from \"components/Modal/Modal\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\n\nexport default class ImageGallery extends Component {\n  state = {\n    showModal: false,\n    bigPic: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"click\", (e) => {\n      if (e.target.nodeName !== \"IMG\") {\n        this.setState({ showModal: false });\n        return;\n      } else {\n        let picture = this.props.images.filter((obj) => {\n          return obj.id === parseInt(e.target.alt);\n        });\n        this.setState({ bigPic: picture[0].largeImageURL });\n      }\n    });\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { showModal, bigPic } = this.state;\n    return (\n      <>\n        <ul className={s.gallery} onClick={this.toggleModal}>\n          {this.props.images.map((img) => {\n            return (\n              <ImageGalleryItem\n                key={nanoid()}\n                smallImgURL={img.webformatURL}\n                id={img.id}\n              />\n            );\n          })}\n        </ul>\n        {showModal && bigPic && (\n          <Modal onClose={this.toggleModal} pic={bigPic} />\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n    })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Desktop/goit-react-hw-03-image-finder/src/components/App.jsx\";\nimport React, { Component } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Loader from \"./Loader/Loader\";\nimport Button from \"./Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      URL: \"https://pixabay.com/api/\",\n      API_KEY: \"25766392-01b12b6ed5ab34bc2910d9c3e\",\n      pictures: [],\n      error: \"\",\n      status: \"idle\",\n      page: 1,\n      query: \"\",\n      totalHits: null\n    };\n\n    this.fetchImg = () => {\n      return fetch(`${this.state.URL}?q=${this.state.query}&page=${this.state.page}&key=${this.state.API_KEY}&image_type=photo&orientation=horizontal&per_page=12`).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(new Error(\"Failed to find any images\"));\n      }).then(pictures => {\n        if (!pictures.total) {\n          toast.error(\"Did find anything, mate\");\n        }\n\n        const selectedProperties = pictures.hits.map(_ref => {\n          let {\n            id,\n            largeImageURL,\n            webformatURL\n          } = _ref;\n          return {\n            id,\n            largeImageURL,\n            webformatURL\n          };\n        });\n        this.setState(prevState => {\n          return {\n            pictures: [...prevState.pictures, ...selectedProperties],\n            status: \"resolved\",\n            totalHits: pictures.total\n          };\n        });\n      }).catch(error => this.setState({\n        error,\n        status: \"rejected\"\n      }));\n    };\n\n    this.processSubmit = query => {\n      this.setState({\n        query\n      });\n    };\n\n    this.handleLoadMore = () => {\n      this.setState(prevState => {\n        return {\n          page: prevState.page + 1\n        };\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.query !== prevState.query) {\n      this.setState({\n        status: \"pending\",\n        pictures: [],\n        page: 1\n      });\n      this.fetchImg();\n    }\n\n    if (this.state.query === prevState.query && this.state.page !== prevState.page) {\n      this.setState({\n        status: \"pending\"\n      });\n      this.fetchImg();\n    }\n  }\n\n  render() {\n    const {\n      pictures,\n      status,\n      totalHits\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.processSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), pictures.length && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: pictures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this), totalHits > pictures.length && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleLoadMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), status === \"pending\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 2000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/roman/Desktop/goit-react-hw-03-image-finder/src/components/App.jsx"],"names":["React","Component","ToastContainer","toast","Searchbar","ImageGallery","Loader","Button","App","state","URL","API_KEY","pictures","error","status","page","query","totalHits","fetchImg","fetch","then","res","ok","json","Promise","reject","Error","total","selectedProperties","hits","map","id","largeImageURL","webformatURL","setState","prevState","catch","processSubmit","handleLoadMore","componentDidUpdate","prevProps","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Loader from \"./Loader/Loader\";\nimport Button from \"./Button/Button\";\n\nexport default class App extends Component {\n  state = {\n    URL: \"https://pixabay.com/api/\",\n    API_KEY: \"25766392-01b12b6ed5ab34bc2910d9c3e\",\n    pictures: [],\n    error: \"\",\n    status: \"idle\",\n    page: 1,\n    query: \"\",\n    totalHits: null,\n  };\n\n  fetchImg = () => {\n    return fetch(\n      `${this.state.URL}?q=${this.state.query}&page=${this.state.page}&key=${this.state.API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error(\"Failed to find any images\"));\n      })\n      .then((pictures) => {\n        if (!pictures.total) {\n          toast.error(\"Did find anything, mate\");\n        }\n        const selectedProperties = pictures.hits.map(\n          ({ id, largeImageURL, webformatURL }) => {\n            return { id, largeImageURL, webformatURL };\n          }\n        );\n        this.setState((prevState) => {\n          return {\n            pictures: [...prevState.pictures, ...selectedProperties],\n            status: \"resolved\",\n            totalHits: pictures.total,\n          };\n        });\n      })\n      .catch((error) => this.setState({ error, status: \"rejected\" }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.query !== prevState.query) {\n      this.setState({ status: \"pending\", pictures: [], page: 1 });\n      this.fetchImg();\n    }\n    if (\n      this.state.query === prevState.query &&\n      this.state.page !== prevState.page\n    ) {\n      this.setState({ status: \"pending\" });\n      this.fetchImg();\n    }\n  }\n\n  processSubmit = (query) => {\n    this.setState({ query });\n  };\n\n  handleLoadMore = () => {\n    this.setState((prevState) => {\n      return { page: prevState.page + 1 };\n    });\n  };\n\n  render() {\n    const { pictures, status, totalHits } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.processSubmit} />\n        {pictures.length && <ImageGallery images={pictures} />}\n        {totalHits > pictures.length && (\n          <Button onClick={this.handleLoadMore} />\n        )}\n        {status === \"pending\" && <Loader />}\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}